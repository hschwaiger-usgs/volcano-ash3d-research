###############################################################################
#  Makefile for Ash3d
#
#    User-specified flags are in this top block
#
###############################################################################

#      This file is a component of the volcanic ash transport and dispersion model Ash3d,
#      written at the U.S. Geological Survey by Hans F. Schwaiger (hschwaiger@usgs.gov),
#      Larry G. Mastin (lgmastin@usgs.gov), and Roger P. Denlinger (roger@usgs.gov).

#      The model and its source code are products of the U.S. Federal Government and therefore
#      bear no copyright.  They may be copied, redistributed and freely incorporated 
#      into derivative products.  However as a matter of scientific courtesy we ask that
#      you credit the authors and cite published documentation of this model (below) when
#      publishing or distributing derivative products.

#      Schwaiger, H.F., Denlinger, R.P., and Mastin, L.G., 2012, Ash3d, a finite-
#         volume, conservative numerical model for ash transport and tephra deposition,
#         Journal of Geophysical Research, 117, B04204, doi:10.1029/2011JB008968. 

#      We make no guarantees, expressed or implied, as to the usefulness of the software
#      and its documentation for any purpose.  We assume no responsibility to provide
#      technical support to users of this software.

#      Sequence of commands:
#      "make -f makefile_optmod"  compiles the Ash3d_res executable
#      "make -f makefile_optmod all" builds the executables and copies to bin
#      "make -f makefile_optmod install" copies the contents of branches/core_code/bin to the install location
#                        e.g. /opt/USGS/Ash3d
#
#  SYSTEM specifies which compiler to use
#    Current available options are:
#      gfortran , ifort
#    This variable cannot be left blank
SYSTEM = gfortran
#
#  RUN specifies which collection of compilation flags that should be run
#    Current available options are:
#      DEBUG : includes debugging info and issues warnings
#      PROF  : includes profiling flags with some optimization
#      OPT   : includes optimizations flags for fastest runtime
#      OMPOPT: includes optimizations flags for fastest runtime and OpenMP directives
#              To run, enter: env OMP_NUM_THREADS=4 Ash3d input_file.inp
#    This variable cannot be left blank
RUN = DEBUG

# This is the location of the USGS libraries and include files
# This might be different from the INSTALLDIR path if you want to link to special MetReader
# projection and HoursSince packages.
USGSROOT=/opt/USGS

# This is the location of the Ash3d core code source files that we will build this
# research branch with.
ASH3dCCSRC=~/work/USGS/Software_repos/GIT/Ash3d/src

INSTALLDIR=/opt/USGS/Ash3d
#INSTALLDIR=~/gcc

# DATA FORMATS
#  For each data format you want to include in the library, set the corresponding
#  variable below to 'T'.  Set to 'F' any you do not want compiled or any unavailable
USENETCDF = T
USEGRIB2 = T
USEHDF = F

#  VERB specifies the verbosity level for debugging purposes
#    Current available options are:
#      VERB=0 : no output to stdout (logfile is still generated)
#      VERB=1 : standard level of logging to stdout
#      VERB=2 : normal output to screen (VERB=1) with additional write statements
#      VERB=3 : 
#       -     : same as VERB=1
VERB = 1

# MEMORY
# If you need pointer arrays instead of allocatable arrays, set this to 'T'
USEPOINTERS = F

###############################################################################
#  NOTE:  The following flags can either be set or commented out.  If they are
#         commented out, LIMITER defaults to LIM_SUPERBEE and DIFFMETH
#         defaults to CRANKNIC
#
#  LIMITER specifies which limiter to use
#    Current available options are:
#      LIM_NONE
#      LIM_LAXWEN
#      LIM_BW
#      LIN_FROMM
#      LIM_MINMOD
#      LIM_SUPERBEE
#      LIM_MC
#LIMITER = LIM_SUPERBEE
#
#  DIFFMETH specifies whether or not to use Crank-Nicolson
#
# Explicit calculation of diffusion term
#DIFFMETH=EXPLDIFF
# Implicit calculation of diffusion using Crank-Nicolson
#DIFFMETH=CRANKNIC

OPTMODS_FPP= -x f95-cpp-input -DTOPO -DLC -DVARDIFF -DWETDEPO -DSRC_SAT -DSRC_RESUSP -DSRC_GAS -DOSCAR
OPTMODS_OBJ=           \
Topography.o           \
LandCover.o            \
Variable_Diffusivity.o \
WetDepo.o              \
Source_Satellite.o     \
Source_Resuspension.o  \
Source_Gas.o           \
Ocean_Currents.o


###############################################################################
#####  END OF USER SPECIFIED FLAGS  ###########################################
###############################################################################



###############################################################################
###############################################################################

LIMFPPFLAG = -DLIM_SUPERBEE
ifeq ($(LIMITER), LIM_NONE)
    LIMFPPFLAG = -DLIM_NONE
endif
ifeq ($(LIMITER), LIM_LAXWEN)
    LIMFPPFLAG = -DLIM_LAXWEN
endif
ifeq ($(LIMITER), LIM_BW)
    LIMFPPFLAG = -DLIM_BW
endif
ifeq ($(LIMITER), LIM_FROMM)
    LIMFPPFLAG = -DLIM_FROMM
endif
ifeq ($(LIMITER), LIM_MINMOD)
    LIMFPPFLAG = -DLIM_MINMOD
endif
ifeq ($(LIMITER), LIM_SUPERBEE)
    LIMFPPFLAG = -DLIM_SUPERBEE
endif
ifeq ($(LIMITER), LIM_MC)
    LIMFPPFLAG = -DLIM_MC
endif

DIFFFPPFLAG = -DCRANKNIC
ifeq ($(DIFFMETH), EXPLDIFF)
    DIFFFPPFLAG = -DEXPLDIFF
endif
ifeq ($(DIFFMETH), CRANKNIC)
    DIFFFPPFLAG = -DCRANKNIC
endif


VERBFPPFLAG = -DVERBOSE_L1
ifeq ($(VERB), 0)
    VERBFPPFLAG = -DVERBOSE_L0
endif
ifeq ($(VERB), 1)
    VERBFPPFLAG = -DVERBOSE_L1
endif
ifeq ($(VERB), 2)
    VERBFPPFLAG = -DVERBOSE_L2
endif
ifeq ($(VERB), 3)
    VERBFPPFLAG = -DVERBOSE_L3
endif

DATAFPPFLAGS =
ifeq ($(USENETCDF), T)
 ncFPPFLAG = -DUSENETCDF
 ncLIBS = -lnetcdf -lnetcdff
endif
ifeq ($(USEGRIB2), T)
 grb2FPPFLAG = -DUSEGRIB2
 grb2LIBS = -lgrib_api_f90 -lgrib_api
endif
ifeq ($(USEHDF), T)
 hdfFPPFLAG = -DUSEHDF
 hdfLIBS =
endif

DATAFPPFLAGS = $(ncFPPFLAG) $(grb2FPPFLAG) $(hdfFPPFLAG)
DATALIBS = $(ncLIBS) $(grb2LIBS) $(hdfLIBS)

ifeq ($(USEPOINTERS), T)
 memFPPFLAG = -DUSEPOINTERS
endif

# location of MetReader, HoursSince and projection
USGSLIBDIR = -L$(USGSROOT)/lib
USGSLIB = -lMetReader -lhourssince -lprojection
USGSINC = -I$(USGSROOT)/include

###############################################################################
##########  GNU Fortran Compiler  #############################################
ifeq ($(SYSTEM), gfortran)

    FCHOME=/usr
    FC=/usr/bin/gfortran

    COMPINC = -I$(FCHOME)/include -I$(FCHOME)/lib64/gfortran/modules
    COMPLIBS = -L$(FCHOME)/lib -L$(FCHOME)/lib64

    LIBS = $(COMPLIBS) $(USGSLIBDIR) $(USGSINC) $(COMPINC) -llapack -lblas $(USGSLIB) $(DATALIBS)

# Debugging flags
ifeq ($(RUN), DEBUG)
    FFLAGS =  -O0 -g3 -Wall -fbounds-check -pedantic -fbacktrace -fimplicit-none -Wunderflow -Wuninitialized -ffpe-trap=invalid,zero,overflow -fdefault-real-8
    ASH3DEXEC=Ash3d_res_debug
endif
ifeq ($(RUN), DEBUGOMP)
    FFLAGS =  -g3 -pg -Wall -fbounds-check -pedantic -fimplicit-none -Wunderflow -Wuninitialized -Wmaybe-uninitialized -ffpe-trap=invalid,zero,overflow -fdefault-real-8 -fopenmp -lgomp
    ASH3DEXEC=Ash3d_res_debugOMP
endif
# Profiling flags
ifeq ($(RUN), PROF)
    FFLAGS = -g -pg -w -fno-math-errno -funsafe-math-optimizations -fno-trapping-math -fno-signaling-nans -fcx-limited-range -fno-rounding-math -fdefault-real-8
    ASH3DEXEC=Ash3d_res_prof
endif
# Production run flags
ifeq ($(RUN), OPT)
    FFLAGS = -O3 -w -fno-math-errno -funsafe-math-optimizations -fno-trapping-math -fno-signaling-nans -fcx-limited-range -fno-rounding-math -fdefault-real-8
    ASH3DEXEC=Ash3d_res
endif
ifeq ($(RUN), OMPOPT)
    FFLAGS = -O3 -w -ffast-math -fdefault-real-8 -fopenmp -lgomp
    ASH3DEXEC=Ash3d_res_omp
endif

      # Preprocessing flags
    FPPFLAGS =  -x f95-cpp-input $(DATAFPPFLAGS) $(VERBFPPFLAG) $(LIMFPPFLAG) $(DIFFFPPFLAG) $(SCFPPFLAG) $(CYCFPPFLAG) $(memFPPFLAG)
      # Extra flags
    #EXFLAGS = -xf95
    EXFLAGS =
endif
###############################################################################
##########  Intel Fortran Compiler  #############################################
ifeq ($(SYSTEM), ifort)
    FCHOME = $(HOME)/intel
    FC = $(FCHOME)/bin/ifort
    COMPLIBS = -L$(FCHOME)/lib
    COMPINC = -I$(FCHOME)/include
    LIBS = $(COMPLIBS) $(DATALIBS) $(PROJLIBS) $(COMPINC) -llapack -lblas -lirc -limf
# Debugging flags
ifeq ($(RUN), DEBUG)
    FFLAGS = -g2 -pg -warn all -check all -real-size 64 -check uninit -traceback
    ASH3DEXEC=Ash3d_res_debug
endif
ifeq ($(RUN), DEBUGOMP)
    FFLAGS = -g2 -pg -warn all -check all -real-size 64 -check uninit -openmp
    ASH3DEXEC=Ash3d_res_debugOMP
endif
# Profiling flags
ifeq ($(RUN), PROF)
    FFLAGS = -g2 -pg
    ASH3DEXEC=Ash3d_res_prof
endif
# Production run flags
ifeq ($(RUN), OPT)
    FFLAGS = -O3 -ftz -w -ipo
    ASH3DEXEC=Ash3d_res
endif
ifeq ($(RUN), OMPOPT)
    FFLAGS = -O3 -ftz -w -ipo -openmp
    ASH3DEXEC=Ash3d_res_omp
endif

      # Preprocessing flags
    FPPFLAGS =  -fpp -Qoption,fpp,$(DATAFPPFLAGS) $(PROJFPPFLAGS) $(VERBFPPFLAG) $(LIMFPPFLAG) $(DIFFFPPFLAG) $(SCFPPFLAG) $(CYCFPPFLAG) $(memFPPFLAG)
      # Extra flags
    EXFLAGS =
endif
###############################################################################

OBJECTS = \
Ash3d_VariableModules.o  \
Input_Data.o             \
Help.o                   \
VotW.o                   \
Airports.o               \
Calc_Mesh.o              \
Alloc_Arrays.o           \
Source.o                 \
Umbrella_Winds.o         \
Tephra.o                 \
Adjust_dt.o              \
TimeStepTotals.o         \
Atmosphere.o             \
MesoInterpolater.o       \
AdvectionHorz.o          \
AdvectionHorz_DCU.o      \
AdvectionVert_DCU.o      \
Diffusion.o              \
Set_BC.o                 \
Output_Vars.o            \
Output_Results.o         \
write_ASCII.o            \
write_BINARY.o           \
write_KML.o

ifeq ($(USENETCDF), T)
  DATAOBJ = write_NETCDF.o
endif

Ash3d_res: $(OBJECTS) $(DATAOBJ) $(OPTMODS_OBJ) Ash3d_res.F90 makefile_optmod
	$(FC) $(OPTMODS_FPP) $(FFLAGS) $(EXFLAGS) $(LIBS) -c Ash3d_res.F90 
	$(FC) $(FFLAGS) $(EXFLAGS) $(OBJECTS) $(DATAOBJ) Ash3d_res.o $(OPTMODS_OBJ) $(LIBS) -o Ash3d_res
	mkdir -p ../bin
	mv Ash3d_res ../bin/$(ASH3DEXEC)


# Objects/Modules for initilization and model set-up
Ash3d_VariableModules.o: $(ASH3dCCSRC)/Ash3d_VariableModules.f90 makefile_optmod
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/Ash3d_VariableModules.f90
Input_Data.o: $(ASH3dCCSRC)/Input_Data.f90 makefile_optmod Ash3d_VariableModules.o Tephra.o Help.o VotW.o Diffusion.o Airports.o $(DATAOBJ)
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/Input_Data.f90
Help.o: $(ASH3dCCSRC)/Help.f90 makefile_optmod Ash3d_VariableModules.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) -c $(ASH3dCCSRC)/Help.f90
VotW.o: $(ASH3dCCSRC)/VotW.f90 makefile_optmod Ash3d_VariableModules.o Source.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/VotW.f90
Airports.o: $(ASH3dCCSRC)/Airports.f90 makefile_optmod Ash3d_VariableModules.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/Airports.f90
Calc_Mesh.o: $(ASH3dCCSRC)/Calc_Mesh.f90 makefile_optmod Ash3d_VariableModules.o Tephra.o Atmosphere.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/Calc_Mesh.f90
Alloc_Arrays.o: $(ASH3dCCSRC)/Alloc_Arrays.f90 makefile_optmod Ash3d_VariableModules.o Output_Vars.o AdvectionHorz.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/Alloc_Arrays.f90
Source.o: $(ASH3dCCSRC)/Source.f90 makefile_optmod Ash3d_VariableModules.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/Source.f90
Umbrella_Winds.o: $(ASH3dCCSRC)/Umbrella_Winds.f90 makefile_optmod Source.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/Umbrella_Winds.f90
Tephra.o: $(ASH3dCCSRC)/Tephra.f90 makefile_optmod Atmosphere.o Ash3d_VariableModules.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/Tephra.f90

# Time
Adjust_dt.o: $(ASH3dCCSRC)/Adjust_dt.f90 makefile_optmod Ash3d_VariableModules.o Tephra.o Diffusion.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) -c $(ASH3dCCSRC)/Adjust_dt.f90
TimeStepTotals.o: $(ASH3dCCSRC)/TimeStepTotals.f90 makefile_optmod Ash3d_VariableModules.o Tephra.o Output_Vars.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) -c $(ASH3dCCSRC)/TimeStepTotals.f90

Atmosphere.o: $(ASH3dCCSRC)/Atmosphere.f90 makefile_optmod Ash3d_VariableModules.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/Atmosphere.f90
MesoInterpolater.o: $(ASH3dCCSRC)/MesoInterpolater.f90 makefile_optmod Atmosphere.o Tephra.o Ash3d_VariableModules.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/MesoInterpolater.f90

# PDE Solver (Advection, Diffusion, B.C.'s)
AdvectionHorz.o: $(ASH3dCCSRC)/AdvectionHorz.f90 makefile_optmod AdvectionHorz_DCU.o Ash3d_VariableModules.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) -c $(ASH3dCCSRC)/AdvectionHorz.f90
AdvectionHorz_DCU.o: $(ASH3dCCSRC)/AdvectionHorz_DCU.f90 makefile_optmod Ash3d_VariableModules.o Tephra.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) -c $(ASH3dCCSRC)/AdvectionHorz_DCU.f90
AdvectionVert_DCU.o: $(ASH3dCCSRC)/AdvectionVert_DCU.f90 makefile_optmod Ash3d_VariableModules.o Tephra.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) -c $(ASH3dCCSRC)/AdvectionVert_DCU.f90
Diffusion.o: $(ASH3dCCSRC)/Diffusion.f90 makefile_optmod Ash3d_VariableModules.o Tephra.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) -c $(ASH3dCCSRC)/Diffusion.f90
Set_BC.o: $(ASH3dCCSRC)/Set_BC.f90 makefile_optmod Ash3d_VariableModules.o Tephra.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) -c $(ASH3dCCSRC)/Set_BC.f90

# Output
Output_Vars.o: $(ASH3dCCSRC)/Output_Vars.f90 makefile_optmod Ash3d_VariableModules.o Tephra.o Airports.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/Output_Vars.f90
Output_Results.o: $(ASH3dCCSRC)/Output_Results.f90 makefile_optmod Ash3d_VariableModules.o Output_Vars.o Tephra.o write_ASCII.o write_KML.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/Output_Results.f90
write_ASCII.o: $(ASH3dCCSRC)/write_ASCII.f90 makefile_optmod Ash3d_VariableModules.o Airports.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/write_ASCII.f90
write_BINARY.o: $(ASH3dCCSRC)/write_BINARY.f90 makefile_optmod Ash3d_VariableModules.o Airports.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/write_BINARY.f90
ifeq ($(USENETCDF), T)
write_NETCDF.o: $(ASH3dCCSRC)/write_NETCDF.f90 makefile_optmod Ash3d_VariableModules.o Output_Vars.o Tephra.o Source.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/write_NETCDF.f90
endif
write_KML.o: $(ASH3dCCSRC)/write_KML.f90 makefile_optmod Ash3d_VariableModules.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/write_KML.f90

# Optional modules
LandCover.o: Optional_Modules/LandCover/LandCover.f90 makefile_optmod Ash3d_VariableModules.o Output_Vars.o Tephra.o Calc_Mesh.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c Optional_Modules/LandCover/LandCover.f90
WetDepo.o: Optional_Modules/Wet_Deposition/WetDepo.f90 makefile_optmod Ash3d_VariableModules.o Output_Vars.o Tephra.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c Optional_Modules/Wet_Deposition/WetDepo.f90
Topography.o: Optional_Modules/Topography/Topography.f90 makefile_optmod Ash3d_VariableModules.o Output_Vars.o Tephra.o Calc_Mesh.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c Optional_Modules/Topography/Topography.f90
Variable_Diffusivity.o: Optional_Modules/Variable_Diffusivity/Variable_Diffusivity.f90 makefile_optmod Diffusion.o Ash3d_VariableModules.o Output_Vars.o Tephra.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c Optional_Modules/Variable_Diffusivity/Variable_Diffusivity.f90
Ocean_Currents.o: Optional_Modules/OceanCurrents/Ocean_Currents.f90 Ash3d_VariableModules.o Output_Vars.o Tephra.o Calc_Mesh.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c Optional_Modules/OceanCurrents/Ocean_Currents.f90
Source_Satellite.o: Optional_Modules/Source_Satellite/Source_Satellite.f90 Source.o makefile_optmod Ash3d_VariableModules.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c Optional_Modules/Source_Satellite/Source_Satellite.f90
Source_Resuspension.o: Optional_Modules/Source_Resuspension/Source_Resuspension.f90 Source.o makefile_optmod Diffusion.o LandCover.o Variable_Diffusivity.o Tephra.o Ash3d_VariableModules.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c Optional_Modules/Source_Resuspension/Source_Resuspension.f90
Source_Gas.o: Optional_Modules/Source_Gas/Source_Gas.f90 Source.o makefile_optmod Diffusion.o LandCover.o Variable_Diffusivity.o Tephra.o Ash3d_VariableModules.o
	 $(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c Optional_Modules/Source_Gas/Source_Gas.f90
Testcases.o: Optional_Modules/TestCases/Testcases.f90 Ash3d_VariableModules.o makefile_optmod
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c Optional_Modules/TestCases/Testcases.f90

all: Ash3d_res

clean:
	rm -rf $(OBJECTS) Ash3d_res.o $(DATAOBJ) $(OPTMODS_OBJ) ../bin/Ash3d* \
        *.mod *__genmod.f90

install:
	install -d $(INSTALLDIR)/bin $(INSTALLDIR)/share/post_proc
	install -m 755 ../bin/* $(INSTALLDIR)/bin
